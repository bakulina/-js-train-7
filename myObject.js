// Завдання 10: Використання Symbol.iterator
// Оголошення об'єкта "myObject" з властивістю "category"
let myObject = {
  //Cтворюємо масив category
  category: [
    { id: 1, name: "apple" },
    { id: 2, name: "banana" },
    { id: 3, name: "orange" },
    { id: 4, name: "grape" },
    { id: 5, name: "mango" }, // Об'єкт категорії з ідентифікатором 5 та назвою "mango"
  ],
  [Symbol.iterator]: function () {
    //Створюємо властивість currentIndex зі значенням 0, яка буде нашим лічильником в ітерації
    // Оголошення методу Symbol.iterator для об'єкта "myObject"
    //Повертаємо this
    // Оголошення методу "next" для ітерації
    // Створюємо логічний оператор який буде перевіряти чи властивість об'єкту currentIndex менша ніж довжина масиву category
    //Створюємо змінну value якій присвоємо властивість name елемента масиву category з індексом currentIndex
    // Збільшимо currentIndex на одиницю
    // Повертаємо об'єкт з властивістю value значенням якої буде value,та прапорцем done: false
    //Якщо властивість об'єкту currentIndex більше або дорівнює довжині масиву category повертаємо об'єкт з прапорцем done: true, коли ітерація закінчена
  },
  //Створюємо властивість currentIndex зі значенням 0, яка буде нашим лічильником в ітерації
  // Оголошення методу Symbol.iterator для об'єкта "myObject"
  //Повертаємо this
  // Оголошення методу "next" для ітерації
  // Створюємо логічний оператор який буде перевіряти чи властивість об'єкту currentIndex менша ніж довжина масиву category
  //Створюємо змінну value якій присвоємо властивість name елемента масиву category з індексом currentIndex
  // Збільшимо currentIndex на одиницю
  // Повертаємо об'єкт з властивістю value значенням якої буде value,та прапорцем done: false
  //Якщо властивість об'єкту currentIndex більше або дорівнює довжині масиву category повертаємо об'єкт з прапорцем done: true, коли ітерація закінчена
};
